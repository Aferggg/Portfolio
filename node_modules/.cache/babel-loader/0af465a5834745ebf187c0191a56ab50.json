{"ast":null,"code":"var _jsxFileName = \"/Users/amandaferguson/Documents/Portfolio-new/Portfolio/src/components/cardContainer/CardContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Card from '../card/Card';\nimport './CardContainer.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardContainer({\n  items,\n  openModal\n}) {\n  _s();\n  const [offset, setOffset] = useState(0);\n  const cardContainerRef = useRef();\n  const cardWidth = 300; // Replace with the actual width of your cards (including margins)\n\n  const scrollLeft = () => {\n    setOffset(Math.max(offset - cardWidth, 0));\n  };\n  const scrollRight = () => {\n    setOffset(Math.min(offset + cardWidth, (items.length - 3) * cardWidth));\n  };\n\n  // Scroll the container whenever the offset changes\n  useEffect(() => {\n    cardContainerRef.current.scrollTo({\n      left: offset,\n      behavior: 'smooth'\n    });\n  }, [offset]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container-outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: scrollLeft,\n      children: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container-inner\",\n      ref: cardContainerRef,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        openModal: openModal\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: scrollRight,\n      children: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CardContainer, \"AS8fIdXYgjkHLZhFZ8W2O15sbiw=\");\n_c = CardContainer;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Card","jsxDEV","_jsxDEV","CardContainer","items","openModal","_s","offset","setOffset","cardContainerRef","cardWidth","scrollLeft","Math","max","scrollRight","min","length","current","scrollTo","left","behavior","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","item","id","_c","$RefreshReg$"],"sources":["/Users/amandaferguson/Documents/Portfolio-new/Portfolio/src/components/cardContainer/CardContainer.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Card from '../card/Card';\nimport './CardContainer.scss';\n\nfunction CardContainer({ items, openModal }) {\n  const [offset, setOffset] = useState(0);\n  const cardContainerRef = useRef();\n\n  const cardWidth = 300; // Replace with the actual width of your cards (including margins)\n\n  const scrollLeft = () => {\n    setOffset(Math.max(offset - cardWidth, 0));\n  };\n\n  const scrollRight = () => {\n    setOffset(Math.min(offset + cardWidth, (items.length - 3) * cardWidth));\n  };\n\n  // Scroll the container whenever the offset changes\n  useEffect(() => {\n    cardContainerRef.current.scrollTo({\n      left: offset,\n      behavior: 'smooth'\n    });\n  }, [offset]);\n\n  return (\n    <div className=\"card-container-outer\">\n      <button onClick={scrollLeft}>Left</button>\n      <div className=\"card-container-inner\" ref={cardContainerRef}>\n        {items.map(item => (\n          <Card key={item.id} item={item} openModal={openModal} />\n        ))}\n      </div>\n      <button onClick={scrollRight}>Right</button>\n    </div>\n  );\n}\n\nexport default CardContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,aAAaA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMW,gBAAgB,GAAGZ,MAAM,CAAC,CAAC;EAEjC,MAAMa,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBH,SAAS,CAACI,IAAI,CAACC,GAAG,CAACN,MAAM,GAAGG,SAAS,EAAE,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBN,SAAS,CAACI,IAAI,CAACG,GAAG,CAACR,MAAM,GAAGG,SAAS,EAAE,CAACN,KAAK,CAACY,MAAM,GAAG,CAAC,IAAIN,SAAS,CAAC,CAAC;EACzE,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAACQ,OAAO,CAACC,QAAQ,CAAC;MAChCC,IAAI,EAAEZ,MAAM;MACZa,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAKmB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCpB,OAAA;MAAQqB,OAAO,EAAEZ,UAAW;MAAAW,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CzB,OAAA;MAAKmB,SAAS,EAAC,sBAAsB;MAACO,GAAG,EAAEnB,gBAAiB;MAAAa,QAAA,EACzDlB,KAAK,CAACyB,GAAG,CAACC,IAAI,iBACb5B,OAAA,CAACF,IAAI;QAAe8B,IAAI,EAAEA,IAAK;QAACzB,SAAS,EAAEA;MAAU,GAA1CyB,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAQqB,OAAO,EAAET,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACrB,EAAA,CAjCQH,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmCtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}